{"name": "Zero Suppression", "description": "Map all samples of a waveform below a certain absolute magnitude to zero\n", "created": "2017-07-15T16:20:16.897288", "xlabel": "Number of elements", "baseline": "numpy", "implementations": [{"name": "numpy", "description": "Basic NumPy implementation", "source": "\nimport numpy as np\n\ndef numpy_zero_suppression(values, threshold):\n    result = np.zeros_like(values)\n    selector = np.abs(values) >= threshold\n    result[selector] = values[selector]\n    return result\n"}, {"name": "numba_single_thread_ufunc", "description": "Numba single threaded ufunc", "source": "\nimport numba\nimport numpy as np\n\n@numba.vectorize(nopython=True)\ndef numba_zero_suppression(values, threshold):\n    if np.abs(values) >= threshold:\n        return values\n    else:\n        return 0.0\n"}, {"name": "numba_gpu_ufunc", "description": "Numba GPU ufunc.  Learn more about the CUDA target for vectorize at\nhttp://numba.pydata.org/numba-doc/latest/cuda/ufunc.html\n(**NOTE**: This particular implementation will be slower than CPU\nbecause there is not enough work for the GPU to overcome the fixed\noverhead of launching a kernel.)\n", "source": "import numba\n\n@numba.vectorize(['(int16, int16)','(float32, float32)', '(float64, float64)'], target='cuda')\ndef numba_zero_suppression(values, threshold):\n    if abs(values) >= threshold:\n        return values\n    else:\n        return 0.0\n"}], "results": [{"numpy": {"x": [100, 1000, 10000, 50000], "times": [1.3111847080290318e-05, 1.9688052963465453e-05, 7.314392817206681e-05, 0.000317787682171911]}, "numba_single_thread_ufunc": {"x": [100, 1000, 10000, 50000], "times": [1.6422180086374283e-06, 3.6603254033252597e-06, 1.995199336670339e-05, 9.291609358042478e-05]}, "numba_gpu_ufunc": {"x": [100, 1000, 10000, 50000], "times": [0.0009158112569712103, 0.0011850690003484487, 0.0012100717984139919, 0.001281382259912789]}, "category": ["int16"]}, {"numpy": {"x": [100, 1000, 10000, 50000], "times": [1.31177828181535e-05, 1.8038465082645416e-05, 5.8104928303509953e-05, 0.00024402756011113525]}, "numba_single_thread_ufunc": {"x": [100, 1000, 10000, 50000], "times": [1.6683152504265309e-06, 3.3464125683531167e-06, 1.6069402173161508e-05, 7.215546909719706e-05]}, "numba_gpu_ufunc": {"x": [100, 1000, 10000, 50000], "times": [0.0009168212111108005, 0.0011824168404564262, 0.0012078824965283275, 0.0012882507406175136]}, "category": ["float32"]}, {"numpy": {"x": [100, 1000, 10000, 50000], "times": [1.2541332887485624e-05, 1.792513490654528e-05, 6.446853070519865e-05, 0.00028999176993966104]}, "numba_single_thread_ufunc": {"x": [100, 1000, 10000, 50000], "times": [1.650223359465599e-06, 3.020064439624548e-06, 1.325103179551661e-05, 5.6861115992069245e-05]}, "numba_gpu_ufunc": {"x": [100, 1000, 10000, 50000], "times": [0.0009102885997854173, 0.0010188834229484202, 0.001043039350770414, 0.001309837820008397]}, "category": ["float64"]}]}