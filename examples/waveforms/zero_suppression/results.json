{"name": "Zero Suppression", "description": "Map all samples of a waveform below a certain absolute magnitude to zero\n", "created": "2017-07-17T10:52:09.718845", "xlabel": "Number of elements", "baseline": "numpy", "implementations": [{"name": "numpy", "description": "Basic NumPy implementation", "source": "\nimport numpy as np\n\ndef numpy_zero_suppression(values, threshold):\n    result = np.zeros_like(values)\n    selector = np.abs(values) >= threshold\n    result[selector] = values[selector]\n    return result\n"}, {"name": "numba_single_thread_ufunc", "description": "Numba single threaded ufunc", "source": "\nimport numba\nimport numpy as np\n\n@numba.vectorize(nopython=True)\ndef numba_zero_suppression(values, threshold):\n    if np.abs(values) >= threshold:\n        return values\n    else:\n        return 0.0\n"}, {"name": "numba_gpu_ufunc", "description": "Numba GPU ufunc.  Learn more about the CUDA target for vectorize at\nhttp://numba.pydata.org/numba-doc/latest/cuda/ufunc.html\n(**NOTE**: This particular implementation will be slower than CPU\nbecause there is not enough work for the GPU to overcome the fixed\noverhead of launching a kernel.)\n", "source": "import numba\n\n@numba.vectorize(['(int16, int16)','(float32, float32)', '(float64, float64)'], target='cuda')\ndef numba_zero_suppression(values, threshold):\n    if abs(values) >= threshold:\n        return values\n    else:\n        return 0.0\n"}], "results": [{"numpy": {"x": [100, 1000, 10000, 50000], "times": [1.3204554701223969e-05, 2.0070907520130275e-05, 7.346942690201104e-05, 0.00031941395718604326]}, "numba_single_thread_ufunc": {"x": [100, 1000, 10000, 50000], "times": [1.6117759188637138e-06, 3.645081683062017e-06, 2.0032208506017923e-05, 9.244910427369177e-05]}, "numba_gpu_ufunc": {"x": [100, 1000, 10000, 50000], "times": [0.0009132669651880861, 0.0011608763830736279, 0.001188995880074799, 0.0012627427699044348]}, "category": ["int16"]}, {"numpy": {"x": [100, 1000, 10000, 50000], "times": [1.3037326373159885e-05, 1.8345625279471278e-05, 5.7852092711254954e-05, 0.00024800754897296427]}, "numba_single_thread_ufunc": {"x": [100, 1000, 10000, 50000], "times": [1.6800683923065663e-06, 3.3925255620852114e-06, 1.6081969300284982e-05, 7.277955431491137e-05]}, "numba_gpu_ufunc": {"x": [100, 1000, 10000, 50000], "times": [0.0009095003469847142, 0.0011643683211877943, 0.001184743526391685, 0.0012630767188966275]}, "category": ["float32"]}, {"numpy": {"x": [100, 1000, 10000, 50000], "times": [1.235862378962338e-05, 1.8237026128917933e-05, 6.508952961303294e-05, 0.00029560462199151513]}, "numba_single_thread_ufunc": {"x": [100, 1000, 10000, 50000], "times": [1.6317023569718003e-06, 3.0587157094851137e-06, 1.309626824222505e-05, 5.678852158598602e-05]}, "numba_gpu_ufunc": {"x": [100, 1000, 10000, 50000], "times": [0.0009103789748623967, 0.001008873493410647, 0.001036040592007339, 0.0012971676234155892]}, "category": ["float64"]}]}