{"name": "Zero Suppression", "description": "Map all samples of a waveform below a certain absolute magnitude to zero\n", "created": "2017-07-15T16:28:04.453018", "xlabel": "Number of elements", "baseline": "numpy", "implementations": [{"name": "numpy", "description": "Basic NumPy implementation", "source": "\nimport numpy as np\n\ndef numpy_zero_suppression(values, threshold):\n    result = np.zeros_like(values)\n    selector = np.abs(values) >= threshold\n    result[selector] = values[selector]\n    return result\n"}, {"name": "numba_single_thread_ufunc", "description": "Numba single threaded ufunc", "source": "\nimport numba\nimport numpy as np\n\n@numba.vectorize(nopython=True)\ndef numba_zero_suppression(values, threshold):\n    if np.abs(values) >= threshold:\n        return values\n    else:\n        return 0.0\n"}, {"name": "numba_gpu_ufunc", "description": "Numba GPU ufunc.  Learn more about the CUDA target for vectorize at\nhttp://numba.pydata.org/numba-doc/latest/cuda/ufunc.html\n(**NOTE**: This particular implementation will be slower than CPU\nbecause there is not enough work for the GPU to overcome the fixed\noverhead of launching a kernel.)\n", "source": "import numba\n\n@numba.vectorize(['(int16, int16)','(float32, float32)', '(float64, float64)'], target='cuda')\ndef numba_zero_suppression(values, threshold):\n    if abs(values) >= threshold:\n        return values\n    else:\n        return 0.0\n"}], "results": [{"numpy": {"x": [100, 1000, 10000, 50000], "times": [1.3187980093061924e-05, 1.96201650891453e-05, 7.160743619315326e-05, 0.00031712656281888485]}, "numba_single_thread_ufunc": {"x": [100, 1000, 10000, 50000], "times": [1.5977152856066823e-06, 3.6078144796192646e-06, 1.984957349486649e-05, 9.237510478124023e-05]}, "numba_gpu_ufunc": {"x": [100, 1000, 10000, 50000], "times": [0.0009150366149842739, 0.0011802437622100116, 0.0012007740512490273, 0.0012734620878472923]}, "category": ["int16"]}, {"numpy": {"x": [100, 1000, 10000, 50000], "times": [1.3089930173009634e-05, 1.8383304309099912e-05, 5.7060068100690844e-05, 0.0002452183817513287]}, "numba_single_thread_ufunc": {"x": [100, 1000, 10000, 50000], "times": [1.643715938553214e-06, 3.262417181394994e-06, 1.5887594036757947e-05, 7.221495169214905e-05]}, "numba_gpu_ufunc": {"x": [100, 1000, 10000, 50000], "times": [0.0009163366062566638, 0.0011911863181740046, 0.0012058768607676029, 0.0012899781903252005]}, "category": ["float32"]}, {"numpy": {"x": [100, 1000, 10000, 50000], "times": [1.2440510001033544e-05, 1.8339089304208754e-05, 6.387450899928808e-05, 0.0002837179037742317]}, "numba_single_thread_ufunc": {"x": [100, 1000, 10000, 50000], "times": [1.6357894521206617e-06, 3.0512626608833673e-06, 1.3166306400671601e-05, 5.680664321407676e-05]}, "numba_gpu_ufunc": {"x": [100, 1000, 10000, 50000], "times": [0.0009093764927238226, 0.0010192572930827737, 0.0010512261278927326, 0.001310652820393443]}, "category": ["float64"]}]}