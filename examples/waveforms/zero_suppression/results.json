{"name": "Zero Suppression", "description": "Map all samples of a waveform below a certain absolute magnitude to zero\n", "created": "2017-07-14T13:12:00.822130", "xlabel": "Number of elements", "baseline": "numpy", "implementations": [{"name": "numpy", "description": "Basic NumPy implementation", "source": "\nimport numpy as np\n\ndef numpy_zero_suppression(values, threshold):\n    result = np.zeros_like(values)\n    selector = np.abs(values) >= threshold\n    result[selector] = values[selector]\n    return result\n"}, {"name": "numba_single_thread_ufunc", "description": "Numba single threaded ufunc", "source": "\nimport numba\nimport numpy as np\n\n@numba.vectorize(nopython=True)\ndef numba_zero_suppression(values, threshold):\n    if np.abs(values) >= threshold:\n        return values\n    else:\n        return 0.0\n"}, {"name": "numba_gpu_ufunc", "description": "Numba GPU ufunc.  Learn more about the CUDA target for vectorize at\nhttp://numba.pydata.org/numba-doc/latest/cuda/ufunc.html\n(**NOTE**: This particular implementation will be slower than CPU\nbecause there is not enough work for the GPU to overcome the fixed\noverhead of launching a kernel.)\n", "source": "import numba\n\n@numba.vectorize(['(int16, int16)','(float32, float32)', '(float64, float64)'], target='cuda')\ndef numba_zero_suppression(values, threshold):\n    if abs(values) >= threshold:\n        return values\n    else:\n        return 0.0\n"}], "results": [{"numpy": {"x": [100, 1000, 10000, 50000], "times": [1.4632216282188892e-05, 1.9422398880124092e-05, 7.262433008290827e-05, 0.000315442088060081]}, "numba_single_thread_ufunc": {"x": [100, 1000, 10000, 50000], "times": [1.6030073026195169e-06, 3.66448724642396e-06, 1.9909841660410165e-05, 9.212918099947273e-05]}, "numba_gpu_ufunc": {"x": [100, 1000, 10000, 50000], "times": [0.0009097582781687379, 0.0011681296583265065, 0.0011930963071063161, 0.0012780443532392383]}, "category": ["int16"]}, {"numpy": {"x": [100, 1000, 10000, 50000], "times": [1.2936752708628773e-05, 1.8094710493460296e-05, 5.702080791816116e-05, 0.0002545011998154223]}, "numba_single_thread_ufunc": {"x": [100, 1000, 10000, 50000], "times": [1.6535256523638964e-06, 3.333425363525748e-06, 1.5935962693765758e-05, 7.216666378080845e-05]}, "numba_gpu_ufunc": {"x": [100, 1000, 10000, 50000], "times": [0.000910856334026903, 0.0011702462891116738, 0.0012088384991511703, 0.0012925691716372967]}, "category": ["float32"]}, {"numpy": {"x": [100, 1000, 10000, 50000], "times": [1.2376923998817802e-05, 1.8392100604251027e-05, 6.498072128742934e-05, 0.00028379578422755]}, "numba_single_thread_ufunc": {"x": [100, 1000, 10000, 50000], "times": [1.6387704666703939e-06, 3.03787540178746e-06, 1.3158585503697395e-05, 5.66642205696553e-05]}, "numba_gpu_ufunc": {"x": [100, 1000, 10000, 50000], "times": [0.0009030432412400842, 0.001008864138275385, 0.0010369813442230225, 0.0012958744401112198]}, "category": ["float64"]}]}